# .pre-commit-config.yaml
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: detect-private-key


-   repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
    -   id: black
        args: [--line-length=79]
        files: ^part3/
        exclude: ^part2/

-   repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
    -   id: isort
        args: ["--profile", "black", "--line-length=79"]
        files: ^part3/
        exclude: ^part2/

-   repo: https://github.com/PyCQA/flake8
    rev: 6.1.0
    hooks:
    -   id: flake8
        additional_dependencies: [flake8-docstrings]
        args: ["--max-line-length=79"]
        files: ^part3/
        exclude: ^part2/

# Hooks locaux pour les badges
-   repo: local
    hooks:
    -   id: pytest-coverage
        name: Run tests with coverage
        entry: bash -c 'cd part3 && poetry run pytest --cov=app --cov-report=xml:reports/coverage/coverage.xml'
        language: system
        pass_filenames: false
        types: [python]

    -   id: flake8-report
        name: Generate flake8 report
        entry: bash -c 'cd part3 && poetry run flake8 --statistics --tee --output-file=reports/flake8/flake8stats.txt app/'
        language: system
        pass_filenames: false
        types: [python]

    -   id: generate-badges
        name: Generate quality badges
        entry: bash -c 'cd part3 && poetry run genbadge coverage -i reports/coverage/coverage.xml -o badges/coverage-badge.svg && poetry run genbadge flake8 -i reports/flake8/flake8stats.txt -o badges/flake8-badge.svg'
        language: system
        pass_filenames: false
        types: [python]
